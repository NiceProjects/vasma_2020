@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$candy-app-primary: mat-palette($mat-grey, 50, 900, 700);
$candy-app-accent: mat-palette($mat-red, A200, A100, A400);
// $candy-app-success:  mat-palette($mat-green, 600, 400, 200);

// The warn palette is optional (defaults to red).
$candy-app-warn: mat-palette($mat-red, A700);

// Create the theme object (a Sass map containing all of the palettes).
$candy-app-theme: mat-dark-theme($candy-app-primary, $candy-app-accent, $candy-app-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($candy-app-theme);

.material-icons {
  font-family: 'Material Icons Round' !important;
}


$colors: (
  white-0: #ffffff,
  white-1: #e1e1e1,
  white-2: #d1d1d1,
  white-3: #999999,
  black-0: #000000,
  black-1: #1a1a1b,
  black-2: #242424,
  black-3: #292929,
  red1: #d32f2f,
  golden: #FFA500
);

@function color($colorName) {
  @return map-get($colors, $colorName);
}


.bg-black-0 {
  background-color: color(black-0);
}
.bg-black-1 {
  background-color: color(black-1);
}
.bg-black-2 {
  background-color: color(black-2);
}
.bg-black-3 {
  background-color: color(black-3);
}

.text-muted {color: #999999 !important}
.text-gold {color: color(golden)}